[{"/Users/linda/searchengine-capstone/sample_data/client/test1/src/index.js":"1","/Users/linda/searchengine-capstone/sample_data/client/test1/src/App.js":"2","/Users/linda/searchengine-capstone/sample_data/client/test1/src/reportWebVitals.js":"3"},{"size":500,"mtime":1646857154596,"results":"4","hashOfConfig":"5"},{"size":1602,"mtime":1646866660222,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1646857154596,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sp1l67",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/linda/searchengine-capstone/sample_data/client/test1/src/index.js",[],[],"/Users/linda/searchengine-capstone/sample_data/client/test1/src/App.js",["18","19"],[],"import React, { Fragment, useState } from \"react\";\n//import { Linking } from 'react-native';\nimport \"./App.css\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      if (query != \"\"){\n      const response = await fetch(`http://localhost:5000/results/?text=${query}`);\n\n      const parseResponse = await response.json();\n\n      setResults(parseResponse);}\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  return (\n    <Fragment>\n      <div className=\"container text-center\">\n        <h1 className=\"my-5\">Search Engine</h1>\n        <form className=\"d-flex\" onSubmit={onSubmitForm}>\n          <input\n            type=\"text\"\n            name=\"text\"\n            placeholder=\"Search for..\"\n            className=\"form-control\"\n            value={query}\n            onChange={e => setQuery(e.target.value)}\n          />\n          <button className=\"btn btn-success\">Submit</button>\n        </form>\n        <table className=\"table my-5\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            {results.map(result => (\n              <tr key={result.id}>\n                <td>{result.title}</td>\n                <td><a target =\"_blank\" href={result.url}>{result.url}</a></td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {results.length === 0 && <p>No Results Found</p>}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;","/Users/linda/searchengine-capstone/sample_data/client/test1/src/reportWebVitals.js",[],[],{"ruleId":"20","severity":1,"message":"21","line":12,"column":17,"nodeType":"22","messageId":"23","endLine":12,"endColumn":19},{"ruleId":"24","severity":1,"message":"25","line":48,"column":21,"nodeType":"26","messageId":"27","endLine":48,"endColumn":59,"fix":"28"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"29","text":"30"},[1393,1393]," rel=\"noreferrer\""]